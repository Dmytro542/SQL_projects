WITH
 emails AS (
 SELECT
   DATE_ADD(s.date, INTERVAL es.sent_date DAY) AS date,
   sp.country AS country,
   send_interval,
   is_verified,
   is_unsubscribed,
   COUNT( DISTINCT es.id_message) AS message_sent,
   COUNT( DISTINCT eo.id_message) AS message_open,
   COUNT( DISTINCT ev.id_message) AS message_visit
 FROM
   `DA.account` a
 JOIN
   `DA.account_session` acs
 ON
   a.id=acs.account_id
 JOIN
   `DA.session_params` sp
 ON
   acs.ga_session_id=sp.ga_session_id
 JOIN
   `DA.session` s
 ON
   sp.ga_session_id=s.ga_session_id
 JOIN
   `DA.email_sent` es
 ON
   a.id=es.id_account
 LEFT JOIN
   `DA.email_open` eo
 ON
   es.id_message = eo.id_message
 LEFT JOIN
   `DA.email_visit` ev
 ON
   es.id_message = ev.id_message
 GROUP BY
   date,
   sp.country,
   send_interval,
   is_verified,
   is_unsubscribed ),
 accounts AS (
 SELECT
   s.date AS date,
   sp.country AS country,
   send_interval,
   is_verified,
   is_unsubscribed,
   COUNT( DISTINCT a.id) AS account_cnt
 FROM
   `DA.account` a
 JOIN
   `DA.account_session` acs
 ON
   a.id=acs.account_id
 JOIN
   `DA.session_params` sp
 ON
   acs.ga_session_id=sp.ga_session_id
 JOIN
   `DA.session` s
 ON
   sp.ga_session_id=s.ga_session_id
 GROUP BY
   date,
   sp.country,
   send_interval,
   is_verified,
   is_unsubscribed ),
 unions AS (
 SELECT
   date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed,
   0 AS account_cnt,
   message_sent,
   message_open,
   message_visit
 FROM
   emails
 UNION ALL
 SELECT
   date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed,
   account_cnt,
   0 AS message_sent,
   0 AS message_open,
   0 AS message_visit
 FROM
   accounts ),
 unions_grouped AS (
 SELECT
   date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed,
   sum (account_cnt) AS account_cnt,
   sum (message_sent) AS message_sent,
   SUM(message_open) AS message_open,
   sum (message_visit) AS message_visit
 FROM
   unions
 GROUP BY
   date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed ),
 total AS (
 SELECT
   date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed,
   account_cnt,
   message_sent,
   message_open,
   message_visit,
   sum (account_cnt) OVER (PARTITION BY country) AS total_country_account_cnt,
   sum (message_sent) OVER (PARTITION BY country) AS total_country_sent_cnt,
 FROM
   unions_grouped ),
 final AS (
 SELECT
   date,
   country,
   send_interval,
   is_verified,
   is_unsubscribed,
   account_cnt,
   message_sent,
   message_open,
   message_visit,
   total_country_account_cnt,
   total_country_sent_cnt,
   DENSE_RANK() OVER(ORDER BY total_country_account_cnt DESC) AS rank_total_country_account_cnt,
   DENSE_RANK() OVER(ORDER BY total_country_sent_cnt DESC) AS rank_total_country_sent_cnt
 FROM
   total )
SELECT
 *
FROM
 final
WHERE
 rank_total_country_account_cnt <=10
 OR rank_total_country_sent_cnt <=10
